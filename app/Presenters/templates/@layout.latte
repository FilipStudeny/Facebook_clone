<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width">

	<title>{ifset title}{include title|stripHtml} | {/ifset}Nette Web</title>
	<link rel="stylesheet" href="{$basePath}/style.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>
</head>

<body class="bg-gray-100">
	<header class="sticky top-0 z-10 flex flex-row items-center justify-between p-4 bg-gray-800 text-white">
		<a href="/" class="w-auto text-4xl md:text-4xl font-bold text-center md:text-left my-auto md:mb-0">Facefook</a>
		<div class="flex items-center">
			<div class="mr-4">
				<img n:if="$user->isLoggedIn()" src="{$basePath} {$user->getIdentity()->profile_picture}" alt="user image" width="50" height="50" class="rounded-full">
			</div>
			<div class="flex">
				<a n:if="$user->isLoggedIn() == false" n:href="Auth:login" class="mr-2 py-2 px-4 font-semibold text-white rounded hover:bg-white hover:text-gray-900">Sign in</a>
				<a n:if="$user->isLoggedIn()" n:href="Auth:out" class="mr-2 py-2 px-4 font-semibold text-white rounded hover:bg-white hover:text-gray-900">Sign out</a>
				<a n:if="$user->isLoggedIn() == false" n:href="Auth:in" class="mr-2 py-2 px-4 font-semibold text-white rounded hover:bg-white hover:text-gray-900">Sign up</a>
			</div>
		</div>
	</header>

	<nav class="fixed left-0 w-full md:w-auto h-auto md:h-full md:flex md:flex-col md:justify-start items-center bg-gray-800 z-10 ">
		<ul class="flex w-full md:w-auto justify-center items-center md:flex-col flex-wrap">
			<li class="w-auto md:w-full m-1 px-4 text-center">
				<a href="#" class="block p-2 text-gray-300 rounded hover:bg-white hover:text-gray-900">Dashboard</a>
			</li>
			<li class="w-auto md:w-full m-1 px-4 text-center">
				<a n:href="Post:create" class="block p-2 text-gray-300 rounded hover:bg-white hover:text-gray-900">Create new post</a>
			</li>
			<li n:if="$user->isLoggedIn()" class="w-auto md:w-full  m-1 px-4 text-center">
				<a n:href="Profile:default $user->getIdentity()->username" class="block p-2 text-gray-300 rounded hover:bg-white hover:text-gray-900">Profile</a>
			</li>
			<li n:if="$user->isLoggedIn()" class="w-auto md:w-full m-1 px-4 text-center">
				<a n:href="Settings:default" class="block p-2 text-gray-300 rounded hover:bg-white hover:text-gray-900">Settings</a>
			</li>
			<li n:if="$user->isLoggedIn()" class="w-auto md:w-full m-1 px-4 text-center">
				<a href="#" class="block p-2 text-gray-300 rounded hover:bg-white hover:text-gray-900">Logout</a>
			</li>
		</ul>
	</nav>

	<main class="mt-24 md:mt-5 flex flex-col items-center justify-center mx-4 md:mx-auto max-w-4xl">
		{include content}
	</main>

	{block scripts}
		<script src="https://nette.github.io/resources/js/3/netteForms.min.js"></script>
		<script src="https://kit.fontawesome.com/a2c399c19b.js" crossorigin="anonymous"></script>
		<script src="https://unpkg.com/htmx.org@1.9.6" integrity="sha384-FhXw7b6AlE/jyjlZH5iHa/tTe9EpJ1Y55RjcgPbjeWMskSxZt1v9qkxLJWNJaGni" crossorigin="anonymous"></script>
	{/block}


	<script>
		// like.js
		let url = {link "Like!"}
				// Attach a click event handler to the like button
				$(document).ready(function () {
					$('.like-button').click(function (e) {
						e.preventDefault();
						var button = $(this); // Store reference to the button
						var entityId = button.data('entity-id');
						var type = button.data('entity-type');

						// Send an AJAX request to the server
						$.ajax({
							type: 'POST',
							url: url, // Replace with the URL of your like action endpoint
							data: {
								entityId: entityId,
								entityType: type,
							},
							success: function (response) {
								// Handle the response, e.g., update the like count or button appearance
								if (response.liked) {
									// Post/comment is now liked, update UI
									button.addClass('text-red-500 liked'); // Use the stored reference to update the button
									button.find('i').removeClass('fa-regular').addClass('fa-solid'); // Change the icon to a solid heart
									// Update the $post->liked value in the template
									button.attr('data-liked', 'true');
								} else {
									// Post/comment is unliked, update UI
									button.removeClass('text-red-500 liked'); // Use the stored reference to update the button
									button.find('i').removeClass('fa-solid').addClass('fa-regular'); // Change the icon to a regular heart
									// Update the $post->liked value in the template
									button.attr('data-liked', 'false');
								}
							},
						});
					});

				});
	</script>
</body>
</html>
